import streamlit as st
import requests

# URL –≤–∞—à–æ–≥–æ –∞–≥–µ–Ω—Ç
AGENT_API_URL = "http://127.0.0.1:8000/agent"

st.title("ü§ñ AI Chat Interface")

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ—Å—Ç–∏–ª—ñ
st.markdown("""
   <style>
   .message {
       background-color: #f1f1f1;
       border-radius: 5px;
       padding: 10px;
       margin: 10px 0;
   }
   .user-message {
       background-color: #0078D7;
       color: white;
       border-radius: 5px;
       padding: 10px;
       text-align: right;
       margin: 10px 0;
   }
   </style>
   """, unsafe_allow_html=True)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–µ—Å—ñ—é –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
if "messages" not in st.session_state:
    st.session_state.messages = []


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É —á–∞—Ç—É
def render_chat():
    for message in st.session_state.messages:
        if message["role"] == "user":
            st.markdown(f"<div class='user-message'>{message['content']}</div>", unsafe_allow_html=True)
        else:
            st.markdown(f"<div class='message'>{message['content']}</div>", unsafe_allow_html=True)


# –†–µ–Ω–¥–µ—Ä —á–∞—Ç—É
render_chat()

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_input = st.text_input("–í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")

# –Ø–∫—â–æ —î –≤—Ö—ñ–¥ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
if user_input:
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ —Å–µ—Å—ñ—ó
    st.session_state.messages.append({"role": "user", "content": user_input})
    # –ü–æ—Ä–æ–∂–Ω—ñ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç—Ä—ñ–º—ñ–Ω–≥–æ–≤–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    placeholder = st.empty()

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –¥–æ –∞–≥–µ–Ω—Ç–∞
    try:
        with requests.post(AGENT_API_URL, json={"query": user_input, "num_results": 5}, stream=True) as response:
            if response.status_code == 200:
                agent_response = ""
                for chunk in response.iter_lines(decode_unicode=True):
                    if chunk:
                        # –î–µ–∫–æ–¥—É—î–º–æ —Ç–∞ –¥–æ–¥–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—É —á–∞—Å—Ç–∏–Ω—É
                        agent_response += chunk
                        placeholder.markdown(f"<div class='message'>{agent_response}</div>", unsafe_allow_html=True)
            else:
                st.error(f"–ü–æ–º–∏–ª–∫–∞ –∞–≥–µ–Ω—Ç–∞: {response.status_code} {response.text}")
    except Exception as e:
        st.error(f"–ü–æ–º–∏–ª–∫–∞ –∑–≤'—è–∑–∫—É –∑ –∞–≥–µ–Ω—Ç–æ–º: {e}")

    # –î–æ–¥–∞—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–æ —á–∞—Ç—É
    st.session_state.messages.append({"role": "agent", "content": agent_response})

    # –û–Ω–æ–≤–ª—é—î–º–æ —á–∞—Ç
    render_chat()
