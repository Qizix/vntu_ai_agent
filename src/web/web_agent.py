import streamlit as st
import requests

# URL –≤–∞—à–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
AGENT_API_URL = "http://127.0.0.1:8000/agent"

# –ù–∞–∑–≤–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.title("ü§ñ AI Chat Interface")

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Å—Ç–∏–ª—ñ
st.markdown("""
   <style>
   .message {
       background-color: #f1f1f1;
       border-radius: 5px;
       padding: 10px;
       margin: 10px 0;
   }
   .user-message {
       background-color: #0078D7;
       color: white;
       border-radius: 5px;
       padding: 10px;
       text-align: right;
       margin: 10px 0;
   }
   </style>
   """, unsafe_allow_html=True)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–µ—Å—ñ—é –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
if "messages" not in st.session_state:
    st.session_state.messages = []


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —á–∞—Ç—É
def render_chat():
    for message in st.session_state.messages:
        if message["role"] == "user":
            st.markdown(f"<div class='user-message'>{message['content']}</div>", unsafe_allow_html=True)
        else:
            st.markdown(f"<div class='message'>{message['content']}</div>", unsafe_allow_html=True)


# –†–µ–Ω–¥–µ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó —á–∞—Ç—É
render_chat()

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
placeholder = st.empty()  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ –ø–æ–ª—è –≤–≤–æ–¥—É
user_input = placeholder.text_input("–í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")

# –Ø–∫—â–æ —î —Ç–µ–∫—Å—Ç –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
if user_input:
    # –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    st.session_state.messages.append({"role": "user", "content": user_input})
    placeholder.empty()  # –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ –≤–≤–æ–¥—É

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –¥–æ –∞–≥–µ–Ω—Ç–∞
    try:
        response = requests.post(AGENT_API_URL, json={"query": user_input, "num_results": 5})
        if response.status_code == 200:
            data = response.json()
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∞–≥–µ–Ω—Ç –ø–æ–≤–µ—Ä–Ω—É–≤ –ø–æ–º–∏–ª–∫—É –∞–±–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            if "error" in data and data["error"]:
                agent_response = f"–ü–æ–º–∏–ª–∫–∞ –∞–≥–µ–Ω—Ç–∞: {data['message']}"
            else:
                agent_response = data.get("response", "–ù–µ–º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –∞–≥–µ–Ω—Ç–∞.")
        else:
            agent_response = f"–ü–æ–º–∏–ª–∫–∞: {response.status_code} {response.text}"
    except Exception as e:
        agent_response = f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ API: {e}"

    # –î–æ–¥–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–≥–µ–Ω—Ç–∞
    st.session_state.messages.append({"role": "agent", "content": agent_response})

    # –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä —á–∞—Ç—É ‚Äî —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
    render_chat()